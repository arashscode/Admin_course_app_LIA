name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Grant execute permission to Gradle wrapper
      run: chmod +x gradlew

    # ✅ Configure Environment Variables from GitHub Secrets
    - name: Configure Environment Variables
      env:
        DB_URL: ${{ secrets.DB_URL }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        echo "SPRING_PROFILES_ACTIVE=prod" >> $GITHUB_ENV
        echo "DB_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV

    # ✅ Test Database Connection Before Proceeding
    - name: Test Supabase Database Connection
      run: |
        echo "Testing connection to database..."
        until pg_isready -h $(echo $DB_URL | sed -E 's/jdbc:postgresql:\/\/([^:/]+).*/\1/') -U $DB_USERNAME; do
          echo "Waiting for database..."
          sleep 5
        done
        echo "Database is ready!"
      env:
        PGPASSWORD: ${{ secrets.DB_PASSWORD }}

    - name: Build with Gradle Wrapper
      run: ./gradlew build --no-daemon

    - name: Run Tests
      run: ./gradlew test --no-daemon

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: build/libs/*.jar
        retention-days: 7

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@v4
